(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{228:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then(function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e})}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=228},232:function(module,exports){module.exports='## Project setup\r\n```\r\nnpm i next-toggle\r\n```\r\n### Toggle mode is defined through FormControl element or ngModel binding\r\n\r\n### Toggle has 4 input parametrs\r\n```\r\n  disabled: boolean\r\n  required: boolean\r\n  tabIndex: number\r\n  id: string\r\n```\r\nid is optional, if you don\'t pass it, id will be added automatically. In this case it\'s impossible to add lable for toggle\r\n\r\n\r\n## Basic usage example with NgModel\r\n\r\n### Add module into your app\r\n```\r\nimport { NextToggleModule } from \'toggle-lib\';\r\nimport { FormsModule } from \'@angular/forms\';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    NextToggleModule,\r\n    FormsModule,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\r\n```\r\n### Add code to the component file\r\n```\r\nexport class AppComponent {\r\n  ...\r\n  isChecked = true;\r\n}\r\n```\r\n### Add murkup to the template file\r\n```\r\n<form>\r\n    <next-toggle\r\n        [disabled]="false"\r\n        [required]="true"\r\n        [tabIndex]="\'1\'"\r\n        [id]="\'1\'"\r\n        [(ngModel)]="isChecked"\r\n        name="toggle"\r\n    ></next-toggle>\r\n    <label for="1">Label for toggle</label>\r\n</form>\r\n```\r\n\r\n## Basic usage example with ReactiveForms\r\n\r\n### Add module into your app\r\n```\r\nimport { NextToggleModule } from \'toggle-lib\';\r\nimport { ReactiveFormsModule } from \'@angular/forms\';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    NextToggleModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n```\r\n### Add code to the component file\r\n```\r\nexport class AppComponent {\r\n  ...\r\n  reactiveForm = new FormGroup({\r\n    toggleFormControl: new FormControl( false )\r\n  });\r\n}\r\n```\r\n### Add murkup to the template file\r\n```\r\n<form [formGroup]="reactiveForm">\r\n    <next-toggle\r\n        [disabled]="false"\r\n        [required]="true"\r\n        [tabIndex]="\'1\'"\r\n        [id]="\'0\'"\r\n        formControlName="toggleFormControl"\r\n    ></next-toggle>\r\n    <label for="0">reactive form</label>\r\n</form>\r\n```\r\n\r\n\r\n### Template for this example looks like code below\r\n```\r\n<style>\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 30px;\r\n  }\r\n  .checkbox-layout {\r\n    position: relative;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n  .container__row {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n</style>\r\n<form class="container">\r\n    <div class="container__row">\r\n        <next-toggle\r\n            [disabled]="false"\r\n            [required]="true"\r\n            [tabIndex]="\'1\'"\r\n            [id]="\'1\'"\r\n            [(ngModel)]="isChecked"\r\n            name="toggle"\r\n        ></next-toggle>\r\n        <label for="1" class="checkbox-layout">Label for toggle</label>\r\n    </div>\r\n</form>\r\n```'},233:function(module,exports){module.exports='## Required toggle\r\n\r\nIf toggle is necessary / toggle has to be checked, you have to pass true for required\r\n\r\n### Tempalte for this example looks like code below\r\n\r\n```\r\n<style>\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .checkbox-layout {\r\n    position: relative;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n  .container__row {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .submit-btn {\r\n    background-color: #0460a9;\r\n    border: none;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: block;\r\n    margin: 20px 0;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n<form class="container" ngNativeValidate>\r\n    <div class="container__row">\r\n        <next-toggle\r\n            [disabled]="flase"\r\n            [required]="true"\r\n            [tabIndex]="\'1\'"\r\n            [id]="\'1\'"\r\n            [(ngModel)]="isChecked"\r\n            name="toggle"\r\n        ></next-toggle>\r\n        <label for="1" class="checkbox-layout">Required</label>\r\n        <input class="submit-btn" type="submit">\r\n    </div>\r\n</form>\r\n```\r\n'},234:function(module,exports){module.exports='## Disabled toggle\r\n\r\nIf user shouldn\'t have possibility to change toggle mode, you have to pass true for disabled\r\n\r\n### Tempalte for this example looks like code below\r\n```\r\n<style>\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .checkbox-layout {\r\n    position: relative;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n  .container__row {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n</style>\r\n<form class="container">\r\n    <div class="container__row">\r\n        <next-toggle\r\n            [disabled]="false"\r\n            id="1"\r\n            [(ngModel)]="isFirstChecked"\r\n            name="toggle1"\r\n        ></next-toggle>\r\n        <label for="1">Active on</label>\r\n    </div>\r\n    <div class="container__row">\r\n        <next-toggle\r\n            [disabled]="false"\r\n            id="2"\r\n            [(ngModel)]="isFirstUnChecked"\r\n            name="toggle2"\r\n        ></next-toggle>\r\n        <label for="2">Active off</label>\r\n    </div>\r\n    <div class="container__row">\r\n        <next-toggle\r\n            [disabled]="true"\r\n            id="3"\r\n            [(ngModel)]="isThirdUnChecked"\r\n            name="toggle3"\r\n        ></next-toggle>\r\n        <label for="3">Disabled off</label>\r\n    </div>\r\n    <div class="container__row">\r\n        <next-toggle\r\n            [disabled]="true"\r\n            id="3"\r\n            [(ngModel)]="isThirdChecked"\r\n            name="toggle4"\r\n        ></next-toggle>\r\n        <label for="3">Disabled on</label>\r\n    </div>\r\n</form>\r\n```'},235:function(module,exports){module.exports='## Toggle size\r\n\r\nToggle size depends on font size, developer should change just font size, toggle size will be changed automatically\r\n\r\n### Tempalte for this example looks like code below\r\n```\r\n<style>\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .checkbox-layout {\r\n    position: relative;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n  .container__row {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .small {\r\n      font-size: 10px;\r\n  }\r\n  .medium {\r\n    font-size: 16px;\r\n  }\r\n  .big {\r\n    font-size: 26px;\r\n  }\r\n</style>\r\n\r\n<form class="container">\r\n    <div class="container__row">\r\n        <next-toggle class="small"\r\n            [disabled]="false"\r\n            [required]="true"\r\n            [tabIndex]="\'3\'"\r\n            [id]="\'1\'"\r\n            [(ngModel)]="isFirstChecked"\r\n            name="toggle1"\r\n        ></next-toggle>\r\n        <label for="1" class="small checkbox-layout">10px</label>\r\n    </div>\r\n\r\n    <div class="container__row">\r\n        <next-toggle class="medium"\r\n            [disabled]="false"\r\n            [required]="true"\r\n            [tabIndex]="\'2\'"\r\n            [id]="\'2\'"\r\n            [(ngModel)]="isSecondChecked"\r\n            name="toggle2"\r\n        ></next-toggle>\r\n        <label for="2" class="medium checkbox-layout">16px</label>\r\n    </div>\r\n\r\n    <div class="container__row">\r\n        <next-toggle class="big"\r\n            [disabled]="false"\r\n            [required]="true"\r\n            [tabIndex]="\'1\'"\r\n            [id]="\'3\'"\r\n            [(ngModel)]="isThirdChecked"\r\n            name="toggle3"\r\n        ></next-toggle>\r\n        <label for="3" class="big checkbox-layout">26px</label>\r\n    </div>\r\n</form>\r\n```'},236:function(module,exports){module.exports='## Element order\r\n\r\nToggle has input tabIndex parameter that\'s why it\'s possible to change elements order on page manually\r\n\r\n### Tempalte for this example looks like code below\r\n```\r\n<style>\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .checkbox-layout {\r\n    position: relative;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n  .container__row {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n</style>\r\n\r\n<form class="container">\r\n  <div class="container__row">\r\n      <next-toggle\r\n          [disabled]="false"\r\n          [required]="true"\r\n          [tabIndex]="\'3\'"\r\n          [id]="\'4\'"\r\n          [(ngModel)]="isFirstChecked"\r\n          name="toggle1"\r\n      ></next-toggle>\r\n      <label for="4" class="checkbox-layout">Third</label>\r\n  </div>\r\n\r\n  <div class="container__row">\r\n      <next-toggle\r\n          [disabled]="false"\r\n          [required]="true"\r\n          [tabIndex]="\'4\'"\r\n          [id]="\'1\'"\r\n          [(ngModel)]="isSecondChecked"\r\n          name="toggle4"\r\n      ></next-toggle>\r\n      <label for="1" class="checkbox-layout">Fourth</label>\r\n  </div>\r\n\r\n  <div class="container__row">\r\n      <next-toggle\r\n          [disabled]="false"\r\n          [required]="true"\r\n          [tabIndex]="\'1\'"\r\n          [id]="\'2\'"\r\n          [(ngModel)]="isThirdChecked"\r\n          name="toggle2"\r\n      ></next-toggle>\r\n      <label for="2" class="checkbox-layout">First</label>\r\n  </div>\r\n\r\n  <div class="container__row">\r\n      <next-toggle\r\n          [disabled]="false"\r\n          [required]="true"\r\n          [tabIndex]="\'2\'"\r\n          [id]="\'3\'"\r\n          name="toggle3"\r\n          [(ngModel)]="isFourthChecked"\r\n      ></next-toggle>\r\n      <label for="3" class="checkbox-layout">Second</label>\r\n  </div>\r\n</form>\r\n```'},237:function(module,__webpack_exports__,__webpack_require__){"use strict";var tslib=__webpack_require__(20),core_umd=__webpack_require__(7),forms_umd=__webpack_require__(148),counter=0,toggle_component_NextToggleComponent=function(){function NextToggleComponent(changeDetectorRef,renderer,el){this.changeDetectorRef=changeDetectorRef,this.renderer=renderer,this.el=el,this.id="next-toggle-"+ ++counter,this.isChecked=!1,this.controlValueAccessorChangeFn=function(){return null},this.onTouched=function(){return null}}var NextToggleComponent_1,_a,_b,_c;return NextToggleComponent_1=NextToggleComponent,Object.defineProperty(NextToggleComponent.prototype,"inputId",{get:function(){return this.id},enumerable:!0,configurable:!0}),Object.defineProperty(NextToggleComponent.prototype,"checked",{get:function(){return this.isChecked},set:function(checked){checked!==this.checked&&(this.isChecked=checked,this.changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),NextToggleComponent.prototype.ngAfterViewInit=function(){this.renderer.removeAttribute(this.el.nativeElement,"id")},NextToggleComponent.prototype.writeValue=function(value){this.checked=value},NextToggleComponent.prototype.registerOnChange=function(fn){this.controlValueAccessorChangeFn=fn},NextToggleComponent.prototype.registerOnTouched=function(fn){this.onTouched=fn},NextToggleComponent.prototype.setDisabledState=function(isDisabled){this.disabled=isDisabled,this.changeDetectorRef.markForCheck()},NextToggleComponent.prototype.onChange=function(event){this.checked=!this.checked,this.controlValueAccessorChangeFn(this.checked)},tslib.__decorate([Object(core_umd.Input)(),tslib.__metadata("design:type",Boolean)],NextToggleComponent.prototype,"disabled",void 0),tslib.__decorate([Object(core_umd.Input)(),tslib.__metadata("design:type",Boolean)],NextToggleComponent.prototype,"required",void 0),tslib.__decorate([Object(core_umd.Input)(),tslib.__metadata("design:type",Number)],NextToggleComponent.prototype,"tabIndex",void 0),tslib.__decorate([Object(core_umd.Input)(),tslib.__metadata("design:type",Object)],NextToggleComponent.prototype,"id",void 0),NextToggleComponent=NextToggleComponent_1=tslib.__decorate([Object(core_umd.Component)({selector:"next-toggle",template:__webpack_require__(526),styles:[__webpack_require__(527)],changeDetection:core_umd.ChangeDetectionStrategy.OnPush,providers:[{provide:forms_umd.NG_VALUE_ACCESSOR,useExisting:Object(core_umd.forwardRef)(function(){return NextToggleComponent_1}),multi:!0}]}),tslib.__metadata("design:paramtypes",["function"==typeof(_a=void 0!==core_umd.ChangeDetectorRef&&core_umd.ChangeDetectorRef)?_a:Object,"function"==typeof(_b=void 0!==core_umd.Renderer2&&core_umd.Renderer2)?_b:Object,"function"==typeof(_c=void 0!==core_umd.ElementRef&&core_umd.ElementRef)?_c:Object])],NextToggleComponent)}();!function(){function NextToggleModule(){}NextToggleModule=tslib.__decorate([Object(core_umd.NgModule)({declarations:[toggle_component_NextToggleComponent],exports:[toggle_component_NextToggleComponent]})],NextToggleModule)}();__webpack_require__.d(__webpack_exports__,"a",function(){return toggle_component_NextToggleComponent})},238:function(module,exports,__webpack_require__){__webpack_require__(239),__webpack_require__(320),__webpack_require__(321),module.exports=__webpack_require__(528)},321:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(22),__webpack_require__(23),__webpack_require__(24);var _storybook_angular__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(58),_storybook_addon_options__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(231);Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.addDecorator)(Object(_storybook_addon_options__WEBPACK_IMPORTED_MODULE_4__.withOptions)({name:"Storybook",url:"#",goFullScreen:!1,showStoriesPanel:!0,showAddonPanel:!0,showSearchBox:!1,addonPanelInRight:!0,sortStoriesByKind:!1,hierarchySeparator:null,hierarchyRootSeparator:null,sidebarAnimations:!0,selectedAddonPanel:void 0,enableShortcuts:!1}));var req=__webpack_require__(523);Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_3__.configure)(function(){req.keys().forEach(function(filename){return req(filename)})},module)}.call(this,__webpack_require__(169)(module))},523:function(module,exports,__webpack_require__){var map={"./index.stories.ts":524};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){var id=map[req];if(!(id+1)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return id}webpackContext.keys=function(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=523},524:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__.d(__webpack_exports__,"checkedState",function(){return checkedState}),__webpack_require__.d(__webpack_exports__,"checkedStatesForDifferentSize",function(){return checkedStatesForDifferentSize}),__webpack_require__.d(__webpack_exports__,"checkedStatesForDifferentTabIndex",function(){return checkedStatesForDifferentTabIndex});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(58),_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(59),marked__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(60),_default_md__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(232),_required_md__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(233),_disabled_md__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(234),_sizes_md__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(235),_order_md__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(236),_projects_toggle_lib_src_public_api__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(237),styles="\n  <style>\n  .container {\n    display: flex;\n    flex-direction: column;\n    font-size: 30px;\n  }\n  .checkbox-layout {\n    position: relative;\n    font-weight: 600;\n    margin: 0;\n  }\n  .container__row {\n    display: flex;\n    flex-direction: row;\n  }\n  .small {\n      font-size: 10px;\n  }\n  .medium {\n    font-size: 16px;\n  }\n  .big {\n    font-size: 26px;\n  }\n  .submit-btn {\n    background-color: #0460a9;\n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: block;\n    margin: 20px 0;\n    font-size: 16px;\n    cursor: pointer;  }\n  </style>\n",checkedState={isFirstChecked:!0,isFirstUnChecked:!1,isThirdChecked:!0,isThirdUnChecked:!1},checkedStatesForDifferentSize={isFirstChecked:!1,isSecondChecked:!0,isThirdChecked:!1},checkedStatesForDifferentTabIndex={isFirstChecked:!1,isSecondChecked:!0,isThirdChecked:!1,isFourthChecked:!0};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Next-toggle",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_projects_toggle_lib_src_public_api__WEBPACK_IMPORTED_MODULE_8__.a]})).add("Install",Object(_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_1__.withNotes)({text:marked__WEBPACK_IMPORTED_MODULE_2__(_default_md__WEBPACK_IMPORTED_MODULE_3__)})(function(){return{template:"\n        "+styles+'\n        <form class="container" ngNativeValidate>\n            <div class="container__row">\n                <next-toggle\n                    [disabled]="false"\n                    [required]="true"\n                    [tabIndex]="\'1\'"\n                    [id]="\'1\'"\n                    [(ngModel)]="checkedState.isChecked"\n                    name="toggle"\n                ></next-toggle>\n                <label for="1" class="checkbox-layout">Label for toggle</label>\n            </div>\n        </form>\n  ',props:{checkedState:checkedState}}})).add("With different font-sizes",Object(_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_1__.withNotes)({text:marked__WEBPACK_IMPORTED_MODULE_2__(_sizes_md__WEBPACK_IMPORTED_MODULE_6__)})(function(){return{template:"\n      "+styles+'\n        <form class="container">\n            <div class="container__row">\n                <next-toggle class="small"\n                    [disabled]="false"\n                    [required]="true"\n                    [tabIndex]="\'3\'"\n                    [id]="\'1\'"\n                    [(ngModel)]="checkedStatesForDifferentSize.isFirstChecked"\n                    name="toggle1"\n                ></next-toggle>\n                <label for="1" class="small checkbox-layout">10px</label>\n            </div>\n\n            <div class="container__row">\n                <next-toggle class="medium"\n                    [disabled]="false"\n                    [required]="true"\n                    [tabIndex]="\'2\'"\n                    [id]="\'2\'"\n                    [(ngModel)]="checkedStatesForDifferentSize.isSecondChecked"\n                    name="toggle2"\n                ></next-toggle>\n                <label for="2" class="medium checkbox-layout">16px</label>\n            </div>\n\n            <div class="container__row">\n                <next-toggle class="big"\n                    [disabled]="false"\n                    [required]="true"\n                    [tabIndex]="\'1\'"\n                    [id]="\'3\'"\n                    [(ngModel)]="checkedStatesForDifferentSize.isThirdChecked"\n                    name="toggle3"\n                ></next-toggle>\n                <label for="3" class="big checkbox-layout">26px</label>\n            </div>\n        </form>\n  ',props:{checkedStatesForDifferentSize:checkedStatesForDifferentSize}}})).add("With disabled toggle",Object(_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_1__.withNotes)({text:marked__WEBPACK_IMPORTED_MODULE_2__(_disabled_md__WEBPACK_IMPORTED_MODULE_5__)})(function(){return{template:"\n        "+styles+'\n        <form class="container">\n        <div class="container__row">\n            <next-toggle\n                [disabled]="false"\n                id="1"\n                [(ngModel)]="checkedState.isFirstChecked"\n                name="toggle1"\n            ></next-toggle>\n            <label for="1">Active on</label>\n        </div>\n\n        <div class="container__row">\n            <next-toggle\n                [disabled]="false"\n                id="2"\n                [(ngModel)]="checkedState.isFirstUnChecked"\n                name="toggle2"\n            ></next-toggle>\n            <label for="2">Active off</label>\n        </div>\n\n        <div class="container__row">\n            <next-toggle\n                [disabled]="true"\n                id="3"\n                [(ngModel)]="checkedState.isThirdUnChecked"\n                name="toggle3"\n            ></next-toggle>\n            <label for="3">Disabled off</label>\n        </div>\n\n        <div class="container__row">\n            <next-toggle\n                [disabled]="true"\n                id="3"\n                [(ngModel)]="checkedState.isThirdChecked"\n                name="toggle4"\n            ></next-toggle>\n            <label for="3">Disabled on</label>\n        </div>\n    </form>\n  ',props:{checkedState:checkedState}}})).add("With different tab indexes",Object(_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_1__.withNotes)({text:marked__WEBPACK_IMPORTED_MODULE_2__(_order_md__WEBPACK_IMPORTED_MODULE_7__)})(function(){return{template:"\n      "+styles+'\n      <form class="container">\n        <div class="container__row">\n            <next-toggle\n                [disabled]="false"\n                [required]="true"\n                [tabIndex]="\'3\'"\n                [id]="\'4\'"\n                [(ngModel)]="checkedStatesForDifferentTabIndex.isFirstChecked"\n                name="toggle1"\n            ></next-toggle>\n            <label for="4" class="checkbox-layout">Third</label>\n        </div>\n\n        <div class="container__row">\n            <next-toggle\n                [disabled]="false"\n                [required]="true"\n                [tabIndex]="\'4\'"\n                [id]="\'1\'"\n                [(ngModel)]="checkedStatesForDifferentTabIndex.isSecondChecked"\n                name="toggle4"\n            ></next-toggle>\n            <label for="1" class="checkbox-layout">Fourth</label>\n        </div>\n\n        <div class="container__row">\n            <next-toggle\n                [disabled]="false"\n                [required]="true"\n                [tabIndex]="\'1\'"\n                [id]="\'2\'"\n                [(ngModel)]="checkedStatesForDifferentTabIndex.isThirdChecked"\n                name="toggle2"\n            ></next-toggle>\n            <label for="2" class="checkbox-layout">First</label>\n        </div>\n\n        <div class="container__row">\n            <next-toggle\n                [disabled]="false"\n                [required]="true"\n                [tabIndex]="\'2\'"\n                [id]="\'3\'"\n                name="toggle3"\n                [(ngModel)]="checkedStatesForDifferentTabIndex.isFourthChecked"\n            ></next-toggle>\n            <label for="3" class="checkbox-layout">Second</label>\n        </div>\n     </form>\n  ',props:{checkedStatesForDifferentTabIndex:checkedStatesForDifferentTabIndex}}})).add("With required attribute",Object(_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_1__.withNotes)({text:marked__WEBPACK_IMPORTED_MODULE_2__(_required_md__WEBPACK_IMPORTED_MODULE_4__)})(function(){return{template:"\n        "+styles+'\n        <form class="container" ngNativeValidate>\n            <div class="container__row">\n                <next-toggle\n                    [disabled]="false"\n                    [required]="true"\n                    [tabIndex]="\'1\'"\n                    [id]="\'1\'"\n                    [(ngModel)]="checkedState.isFirstUnChecked"\n                    name="toggle"\n                ></next-toggle>\n                <label for="1" class="checkbox-layout">Required</label>\n            </div>\n            <div>\n                <input class="submit-btn" type="submit">\n            </div>\n        </form>\n  ',props:{checkedState:checkedState}}}))}.call(this,__webpack_require__(169)(module))},526:function(module,exports){module.exports='<label class="checkbox-inner-container">\r\n  <input\r\n    type="checkbox"\r\n    #input\r\n    class="checkbox-input cdk-visually-hidden"\r\n    [checked]="checked"\r\n    [disabled]="disabled"\r\n    [id]="inputId"\r\n    [required]="required"\r\n    [tabIndex]="tabIndex"\r\n    (change)="onChange($event)"\r\n  />\r\n  <div class="checkbox-input__thumb"></div>\r\n</label>\r\n'},527:function(module,exports){module.exports=".checkbox-inner-container {\n  display: inline-block;\n  line-height: 0;\n  position: relative;\n  vertical-align: middle;\n  white-space: nowrap; }\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  text-transform: none;\n  width: 1px;\n  bottom: 0.8em;\n  margin-left: 1em; }\n\n.checkbox-input {\n  position: absolute;\n  opacity: 0; }\n\n.checkbox-input + .checkbox-input__thumb {\n    position: relative;\n    top: -0.12em;\n    display: inline-block;\n    width: 1.5em;\n    height: 1em;\n    margin: 0.2em 0.2em 0.2em 0;\n    border-radius: 100em;\n    background-color: var(--next-toggle-gray, #9d9d9d);\n    cursor: pointer;\n    position: relative;\n    transition-duration: 0.3s;\n    transition-property: box-shadow, background-color; }\n\n.checkbox-input:focus + .checkbox-input__thumb,\n  .checkbox-input:active + .checkbox-input__thumb {\n    box-shadow: 0 0 1px 3px var(--next-toggle-blue-outline, #5291dd); }\n\n.checkbox-input:checked + .checkbox-input__thumb {\n    background-color: var(--next-toggle-blue, #0460a9); }\n\n.checkbox-input:checked:focus + .checkbox-input__thumb,\n  .checkbox-input:checked:active + .checkbox-input__thumb {\n    box-shadow: 0 0 1px 3px var(--next-toggle-blue-outline, #5291dd); }\n\n.checkbox-input[disabled] + .checkbox-input__thumb {\n    opacity: 0.5;\n    background-color: var(--next-toggle-gray-medium, #c6c6c6);\n    cursor: default; }\n\n.checkbox-input[disabled]:active + .checkbox-input__thumb,\n  .checkbox-input[disabled]:focus + .checkbox-input__thumb {\n    opacity: 0.5;\n    box-shadow: inset 0 0 0 1px var(--next-toggle-gray, #9d9d9d); }\n\n.checkbox-input + .checkbox-input__thumb:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 1em;\n    height: 1em;\n    border-radius: inherit;\n    box-shadow: 0 0 0 1px var(--next-toggle-gray, #9d9d9d);\n    background: var(--next-toggle-gray-light, #ededed);\n    transition-duration: 0.3s;\n    transition-property: -webkit-transform;\n    transition-property: transform;\n    transition-property: transform, -webkit-transform;\n    will-change: transform; }\n\n.checkbox-input:active + .checkbox-input__thumb:before,\n  .checkbox-input:focus + .checkbox-input__thumb:before {\n    background-color: var(--next-toggle-gray-light, #ededed); }\n\n.checkbox-input:checked + .checkbox-input__thumb:before {\n    -webkit-transform: translateX(0.5em);\n            transform: translateX(0.5em);\n    box-shadow: 0 0 0 1px var(--next-toggle-blue, #0460a9); }\n\n.checkbox-input:checked:disabled + .checkbox-input__thumb:before {\n    -webkit-transform: translateX(0.5em);\n            transform: translateX(0.5em);\n    box-shadow: 0 0 0 1px var(--next-toggle-gray, #9d9d9d); }\n"},528:function(module,exports,__webpack_require__){var content=__webpack_require__(529);"string"==typeof content&&(content=[[module.i,content,""]]);var options={hmr:!0,transform:void 0,insertInto:void 0};__webpack_require__(530)(content,options);content.locals&&(module.exports=content.locals)},529:function(module,exports){module.exports=[[module.i,"/* You can add global styles to this file, and also import other style files */\n","",""]]}},[[238,1,2]]]);
//# sourceMappingURL=main.fc20af8930861dbd6f18.bundle.js.map